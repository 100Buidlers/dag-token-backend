---
# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  dag-token-backend

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 900
  Api:
    BinaryMediaTypes:
      - multipart~1form-data
      - image~1png
      - image~1jpeg
      - image~1jpg
      - image~1gif
      - image~1tiff

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  RuleGraphFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - x86_64
      Environment:
        Variables:
          PRIVATE_KEY: 32886d5a3a8cfc7cd0e24b0787e44ffc31b711b5df52a2b388c539f084fb2fef
          ALCHEMY_API_KEY: w3P5g5S0SLQvDPksCjziSXMK-EJKiJMm
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:wallet-keys-R3IWWV"
      PackageType: Image
      ImageConfig:
        Command: [src/handlers/rule-graph.ruleGraphHandler]
      Events:
        OptionsRuleGraph:
          Type: Api
          Properties:
            Path: /graph
            Method: OPTIONS
        PostRuleGraph:
          Type: Api
          Properties:
            Path: /graph
            Method: POST
        DeleteRuleGraph:
          Type: Api
          Properties:
            Path: /graph
            Method: DELETE
        GetRuleGraph:
          Type: Api
          Properties:
            Path: /graph
            Method: GET
        PutRuleGraph:
          Type: Api
          Properties:
            Path: /graph
            Method: PUT
    Metadata:
      DockerTag: nodejs14.x-v1
      DockerContext: .
      Dockerfile: Dockerfile

  AuxiliaryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - x86_64
      Environment:
        Variables:
          DAG_TOKEN_TABLE: !Ref DagTokenTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DagTokenTable
      PackageType: Image
      ImageConfig:
        Command: [src/handlers/auxiliary.auxiliaryHandler]
      Events:
        OptionsRuleGraph:
          Type: Api
          Properties:
            Path: /auxiliary
            Method: OPTIONS
        PostRuleGraph:
          Type: Api
          Properties:
            Path: /auxiliary
            Method: POST
        GetRuleGraph:
          Type: Api
          Properties:
            Path: /auxiliary
            Method: GET
        PutRuleGraph:
          Type: Api
          Properties:
            Path: /auxiliary
            Method: PUT
    Metadata:
      DockerTag: nodejs14.x-v1
      DockerContext: .
      Dockerfile: Dockerfile

  # DynamoDB table to store item
  DagTokenTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
